package Scheduler;

import java.io.IOException;
import java.util.concurrent.CountDownLatch;

import com.fourinone.MigrantWorker;
import com.fourinone.WareHouse;

import component.CPUWorker;
import component.GPUWorker;
import component.JobConfig;
import define.user.ResultMerging;

@SuppressWarnings("serial")
//协调调度类
public class CooperativeScheduler extends MigrantWorker
{	
	CPUWorker cpuWorker;//CPU工人
	GPUWorker gpuWorker;//GPU工人

	public WareHouse doTask(WareHouse inhouse)
	{
		int cpuStartIndex = 0;
		int cpuIncrement = 0;
		JobConfig config = new JobConfig();
		int indexOfWorker = Integer.parseInt( inhouse.getString("jobInfo") );
		cpuIncrement = config.getTotalDataCount() * indexOfWorker;
		config.setCpuStartIndex(cpuStartIndex + cpuIncrement)  ;
		config.setGpuStartIndex(cpuStartIndex + config.getCPUDataCount());

		if (config.getSourceType().equals("1")) {
			
		}

	
		CountDownLatch cdt = new CountDownLatch(config.getTotalDataCount());//初始化计数器
		
		try {
			cpuWorker = new CPUWorker(config,cdt);//初始化并启动CPU任务
			gpuWorker = new GPUWorker(config,cdt);//初始化并启动GPU任务
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			System.out.println("开始等待任务结束");
			cdt.await();//等待任务完成
			System.out.println("任务结束！！");
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		ResultMerging rm=new ResultMerging(config.getTotalDataCount(),config.getResultPath());//初始化合并结果类
		try {
			rm.merging();
		} catch (NumberFormatException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
		
	}
	
	public void joinCluster(String clusterName){
		this.waitWorking(clusterName);
	}
	
}